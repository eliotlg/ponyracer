"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var child_process_1 = __importDefault(require("child_process"));
var request_1 = __importDefault(require("request"));
var prompt_1 = __importDefault(require("prompt"));
var util_1 = __importDefault(require("util"));
var glob_1 = __importDefault(require("glob"));
var logger_1 = __importDefault(require("./logger"));
var execAsync = util_1.default.promisify(child_process_1.default.exec);
var readFileAsync = util_1.default.promisify(fs_1.default.readFile);
exports.readFile = function (file) { return readFileAsync(file, 'utf8'); };
exports.exec = function (cmd) { return execAsync(cmd, { maxBuffer: 1024 * 1000 }); };
exports.prompt = function (schema) {
    return new Promise(function (resolve, reject) {
        prompt_1.default.start();
        prompt_1.default.get(schema, function (err, result) {
            if (err) {
                reject();
            }
            else {
                resolve(result);
            }
        });
    });
};
exports.post = function (url, json, headers) {
    return new Promise(function (resolve, reject) {
        request_1.default.post({ url: url, json: json, headers: headers }, function (err, response, body) {
            if (err) {
                reject(err);
            }
            else {
                resolve({ response: response, body: body });
            }
        });
    });
};
exports.listFiles = function (pattern) { return new Promise(function (resolve, reject) {
    glob_1.default(pattern, function (err, files) {
        if (err) {
            logger_1.default.error('Could not find the spec files.');
            reject(err);
        }
        else {
            resolve(files);
        }
    });
}); };
exports.exitProcessWithError = function (code) {
    process.exit(code);
};
