"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var logger_1 = __importDefault(require("./logger"));
var utils_1 = require("./utils");
var RESULT_FILE = 'results/tslint-results.json';
var tslint = function (options) { return new Promise(function (resolve, reject) {
    logger_1.default.log('Starting code analysis...');
    return utils_1.exec("tslint --force -t json -o " + RESULT_FILE + " --project tsconfig.spec.json")
        .then(function () { return utils_1.readFile(RESULT_FILE); }, function (error) {
        logger_1.default.error('Error while running tslint.');
        logger_1.default.error('Try to run `ng lint`.');
        logger_1.default.debug(options, 'Error while running tslint was: ', error);
        return Promise.reject();
    })
        .then(function (data) {
        var tslintResults = { errors: 0 };
        if (data) {
            var results = JSON.parse(data);
            tslintResults.errors = results.length;
        }
        if (tslintResults.errors !== 0) {
            var score = Math.max(0, 100 - tslintResults.errors);
            logger_1.default.warn('Code quality score: ' + score + '%');
            logger_1.default.warn('Looks like you have some issues in your code.');
            logger_1.default.warn('Try to run `ng lint` to see what you can fix.');
        }
        else {
            logger_1.default.success('Code quality score: 100%');
        }
        resolve(tslintResults);
    }, function (error) {
        logger_1.default.error('Error while reading tslint results.');
        logger_1.default.error('Try to run `ng lint`.');
        logger_1.default.debug(options, 'Error while reading tslint errors was: ', error);
        reject();
    });
}); };
exports.default = tslint;
